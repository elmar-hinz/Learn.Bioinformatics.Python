#!/usr/bin/env  python3

import os
import shutil


def main():
    # paths
    here = os.path.abspath(os.path.dirname(__file__))
    root = os.path.abspath(os.path.join(here, '..'))
    sphinx = os.path.join(root, 'docs/')
    docs = os.path.join(root, 'documentation/')
    dist = os.path.join(root, 'dist/')
    html_source = os.path.join(sphinx, '_build/html/')
    html_target = os.path.join(docs, 'html/')
    epub_source = os.path.join(sphinx, '_build/epub/')
    epub_target = os.path.join(docs, 'epub/')

    # commands
    gen_api = 'sphinx-apidoc --doc-project="API" --force -o docs . setup.py'
    gen_html = 'make html'
    gen_epub = 'make epub'
    gen_dist = './setup.py sdist'
    test = 'twine upload dist/* -r testpypi'
    upload = 'twine upload dist/* -r pypi'

    # execute
    if os.path.exists(docs):
        shutil.rmtree(docs)

    if not os.path.exists(docs):
        os.makedirs(docs)

    if os.path.exists(dist):
        shutil.rmtree(dist)

    if not os.path.exists(dist):
        os.makedirs(dist)

    with cd(root):
        os.system(gen_api)

    with cd(sphinx):
        os.system(gen_html)

    os.rename(html_source, html_target)

    with cd(sphinx):
        os.system(gen_epub)

    os.rename(epub_source, epub_target)

    with cd(root):
        os.system(gen_dist)

    # Upload test
    print('Trying upload on TESTPYPI')
    with cd(root):
        os.system(test)

    var = input('Uploading to live server? (y/n)')
    if var.strip() == 'y':
        with cd(root):
            os.system(upload)
    else:
        print('NOT UPLOADING. Please run the command manually!')
        print(upload)


class cd:
    """Context manager for changing the current working directory"""

    def __init__(self, new_path):
        self.newPath = os.path.realpath(new_path)

    def __enter__(self):
        self.savedPath = os.getcwd()
        os.chdir(self.newPath)

    def __exit__(self, etype, value, traceback):
        os.chdir(self.savedPath)


if __name__ == '__main__':
    main()
