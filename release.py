import os
import shutil


def main():
    # pathes
    here = os.path.abspath(os.path.dirname(__file__))
    sphinx = os.path.join(here, 'sphinx/')
    docs = os.path.join(here, 'docs/')
    html_source = os.path.join(here, 'sphinx/_build/html/')
    html_target = os.path.join(here, 'docs/html/')
    epub_source = os.path.join(here, 'sphinx/_build/epub/')
    epub_target = os.path.join(here, 'docs/epub/')
    rst_challenges = os.path.join(sphinx, 'challenges.rst')
    rst_modules = os.path.join(sphinx, 'modules.rst')
    rst_hello = os.path.join(sphinx, 'HelloWorld.rst')

    # commands
    genapi = 'sphinx-apidoc --doc-project="API" --force -o sphinx . setup.py ' \
             'release.py '
    genhtml = 'make html'
    genepub = 'make epub'

    # execute
    if os.path.exists(docs):
        shutil.rmtree(docs)

    if not os.path.exists(docs):
        os.makedirs(docs)

    with cd(here):
        os.system(genapi)

    with cd(sphinx):
        os.system(genhtml)

    os.rename(html_source, html_target)

    with cd(sphinx):
        os.system(genepub)

    os.rename(epub_source, epub_target)

    # cleanup autogenerated rst files
    os.remove(rst_challenges)
    os.remove(rst_hello)
    os.remove(rst_modules)

class cd:
    """Context manager for changing the current working directory"""

    def __init__(self, newPath):
        self.newPath = os.path.realpath(newPath)

    def __enter__(self):
        self.savedPath = os.getcwd()
        os.chdir(self.newPath)

    def __exit__(self, etype, value, traceback):
        os.chdir(self.savedPath)

if __name__ == '__main__':
    main()
